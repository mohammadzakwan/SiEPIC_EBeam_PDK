<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>* SiEPIC Configure shortcut keys, settings, layers</description>
 <version/>
 <category/>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name/>
 <menu-path>siepic_menu.beginning</menu-path>
 <interpreter>ruby</interpreter>
 <dsl-interpreter-name/>
 <text># Ruby script
# SiEPIC_Keybindings

# This file is part of the SiEPIC_EBeam_PDK

# Version history:

# code by davidnhutch
#  - This uses the key bindings modifying script from http://klayout.de/forum/comments.php?DiscussionID=644
# Lukas Chrostowski           2016/01/16
#  - Configured for SiEPIC
 

module MyMacro
 

  # Keys configured for SiEPIC-EBeam-PDK

  include RBA

  mw = RBA::Application::instance.main_window

  mw.message('Running *SiEPIC configuration; message should disappear if successful.',10000)


  
  # KEY BINDINGS

  # get the config string
  
  config = RBA::Application.instance.get_config('key-bindings')
  #puts config.split(';') # Print all current ones out
  
  # turn it into a hash
  def config.to_mapping
    in_str = false
    escaped = false
    item = key = ""
    m = {}
    each_char do |c|
      if in_str &amp;&amp; c == "\\"
        escaped = true
        item += c
      elsif escaped &amp;&amp; c == "'"
        escaped = false
        item += c
      elsif c == "'"
        in_str = !in_str
        item += c
      elsif !in_str &amp;&amp; c == ':'
        key = item
        item = ''
      elsif !in_str &amp;&amp; c == ';'
        m[key] = item
        item = ''
      else
        item += c
      end
    end
    m[key] = item
    m
  end
  mapping = config.to_mapping
  
  # access a single setting and change it
  #puts mapping['edit_menu.mode_menu.partial'] # Print the current setting
  
  mapping['edit_menu.clear_all_rulers'] = "'Ctrl+K'"
  mapping['edit_menu.copy'] = "'Ctrl+C'"
  mapping['edit_menu.cut'] = "'Ctrl+X'"
  mapping['edit_menu.paste'] = "'Ctrl+V'"
  mapping['edit_menu.redo'] = "'Ctrl+Y'"
  mapping['edit_menu.undo'] = "'Ctrl+Z'"
  mapping['edit_menu.delete'] = "'Del'"
#  mapping['edit_menu.duplicate'] = "'Ctrl+B'"
  mapping['edit_menu.mode_menu.move'] = "'M'"
  mapping['edit_menu.mode_menu.move'] = "'M'"
  mapping['edit_menu.mode_menu.ruler'] = "'R'"
  mapping['edit_menu.mode_menu.select'] = "'S'"
  mapping['edit_menu.mode_menu.box'] = "'B'"
  mapping['edit_menu.mode_menu.instance'] = "'I'"
  mapping['edit_menu.mode_menu.partial'] = "'L'"
  mapping['edit_menu.mode_menu.path'] = "'P'"
  mapping['edit_menu.mode_menu.polygon'] = "'G'"
  mapping['edit_menu.mode_menu.text'] = "'X'"
  mapping['edit_menu.select_menu.select_all'] = "'Shift+A'"
  mapping['edit_menu.show_properties'] = "'Q'"
  mapping['edit_menu.edit_options'] = "'E'"
  mapping['edit_menu.selection_menu.change_layer'] = "'Shift+L'"
  mapping['edit_menu.selection_menu.sel_flip_x'] = "'Shift+H'"
  mapping['edit_menu.selection_menu.sel_flip_y'] = "'Shift+V'"
  mapping['edit_menu.selection_menu.sel_move'] = "'Ctrl+M'"
#  mapping['edit_menu.selection_menu.size'] = "'Z'"
#  mapping['edit_menu.selection_menu.tap'] = "''"
  
  mapping['file_menu.new_layout'] = "'Ctrl+N'"
  mapping['file_menu.close'] = "'Ctrl+W'"
  mapping['file_menu.open_new_panel'] = "'Ctrl+O'"
  mapping['file_menu.open_same_panel'] = "'Ctrl+Shift+O'"
  mapping['file_menu.save'] = "'Ctrl+S'"
  mapping['file_menu.save_as'] = "'Ctrl+Shift+S'"
  mapping['file_menu.screenshot'] = "'F12'"
#  mapping['file_menu.setup'] = "'F4'"
  
  mapping['macros_menu.macro_development'] = "'F5'"
    
  mapping['zoom_menu.max_hier'] = "'Shift+F'"
  mapping['zoom_menu.select_current_cell'] = "'Shift+S'" # Display &gt; Show as new top
  mapping['zoom_menu.zoom_fit'] = "'F'"
  mapping['zoom_menu.zoom_fit_sel'] = "'Shift+F2'"
  mapping['zoom_menu.zoom_in'] = "'Return'"
  mapping['zoom_menu.zoom_out'] = "'Shift+Return'"
  
  # turn the hash back into a config string
  config_new = mapping.collect{|k,v| "#{k}:#{v}"}.join(';')
  
  # activate &amp; store the changed configuration
  if config != ""  # strange bug in Windows.  key-bindings is blank.
    RBA::Application.instance.set_config('key-bindings', config_new)
  end

  RBA::Application.instance.set_config('edit-connect-angle-mode','ortho')
  RBA::Application.instance.set_config('edit-inst-angle','0')
  RBA::Application.instance.set_config('edit-move-angle-mode','diagonal')
  RBA::Application.instance.set_config('edit-snap-to-objects','true')
  RBA::Application.instance.set_config('grid-micron','0.01')
  RBA::Application.instance.set_config('edit-top-level-selection','true')
  RBA::Application.instance.set_config('inst-color','#ffcdcd')
  RBA::Application.instance.set_config('text-font','3')
  RBA::Application.instance.set_config('guiding-shape-line-width','0')
  RBA::Application.instance.set_config('rdb-marker-color','#ff0000')
  RBA::Application.instance.set_config('rdb-marker-line-width','8')
  RBA::Application.instance.set_config('default-layer-properties', File.join(RBA::Application.instance.application_data_path(),'libraries','klayout_Layers_EBeam.lyp') )

  mw.message('*SiEPIC configuration complete - good luck on your design!',5000)

end
</text>
</klayout-macro>
